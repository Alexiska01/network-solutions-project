import { useEffect, useState } from 'react';
import { useModelPreloader } from './useModelPreloader';

interface WelcomePreloaderState {
  isWelcomeLoadingComplete: boolean;
  loadingProgress: number;
}

export const useWelcomePreloader = (heroData: any[]): WelcomePreloaderState => {
  const [isWelcomeLoadingComplete, setIsWelcomeLoadingComplete] = useState(false);
  const [loadingProgress, setLoadingProgress] = useState(0);
  
  const { isModelReady, isModelPartiallyReady, preloadModel, preloadModelPartially } = useModelPreloader();

  useEffect(() => {
    const loadWelcomeModels = async () => {
      try {
        const firstModelUrl = heroData[0]?.modelUrl; // 3530
        const secondModelUrl = heroData[1]?.modelUrl; // 3730
        
        if (!firstModelUrl || !secondModelUrl) {
          console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã URL –º–æ–¥–µ–ª–µ–π');
          setIsWelcomeLoadingComplete(true);
          return;
        }

        console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —É–º–Ω—É—é –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –≤ WelcomeScreen');
        
        // –≠—Ç–∞–ø 1: –ó–∞–≥—Ä—É–∂–∞–µ–º 3530 –ø–æ–ª–Ω–æ—Å—Ç—å—é (0% -> 50%)
        console.log('üì• –ó–∞–≥—Ä—É–∂–∞—é 3530 —Å–µ—Ä–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é:', firstModelUrl);
        setLoadingProgress(10);
        
        await preloadModel(firstModelUrl);
        console.log('‚úÖ 3530 —Å–µ—Ä–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        setLoadingProgress(50);
        
        // –≠—Ç–∞–ø 2: –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É 70% –æ—Ç 3730 –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É
        console.log('üì• –ó–∞–ø—É—Å–∫–∞—é –∑–∞–≥—Ä—É–∑–∫—É 3730 —Å–µ—Ä–∏–∏ –≤ —Ñ–æ–Ω–µ:', secondModelUrl);
        setLoadingProgress(60);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É 3730 (–Ω–µ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)
        preloadModel(secondModelUrl).then(() => {
          console.log('‚úÖ 3730 —Å–µ—Ä–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ');
        }).catch(error => {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ 3730:', error);
        });
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ (70% –≥–æ—Ç–æ–≤–æ)
        setTimeout(() => {
          setLoadingProgress(90);
        }, 1000);
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è UX
        setTimeout(() => {
          setLoadingProgress(100);
          setIsWelcomeLoadingComplete(true);
          console.log('üéâ WelcomeScreen –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        }, 500);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –≤ WelcomeScreen:', error);
        // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        setIsWelcomeLoadingComplete(true);
      }
    };

    loadWelcomeModels();
  }, [heroData, preloadModel, preloadModelPartially]);

  return {
    isWelcomeLoadingComplete,
    loadingProgress
  };
};
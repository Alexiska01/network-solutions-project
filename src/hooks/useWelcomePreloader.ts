import { useEffect, useState } from 'react';
import { useModelPreloader } from './useModelPreloader';

interface WelcomePreloaderState {
  isWelcomeLoadingComplete: boolean;
  loadingProgress: number;
}

export const useWelcomePreloader = (heroData: any[]): WelcomePreloaderState => {
  const [isWelcomeLoadingComplete, setIsWelcomeLoadingComplete] = useState(false);
  const [loadingProgress, setLoadingProgress] = useState(0);
  
  const { isModelReady, isModelPartiallyReady, preloadModel, preloadModelPartially } = useModelPreloader();

  useEffect(() => {
    const loadWelcomeModels = async () => {
      try {
        const firstModelUrl = heroData[0]?.modelUrl; // 3530
        const secondModelUrl = heroData[1]?.modelUrl; // 3730
        
        if (!firstModelUrl || !secondModelUrl) {
          console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã URL –º–æ–¥–µ–ª–µ–π');
          setIsWelcomeLoadingComplete(true);
          return;
        }

        console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —É–º–Ω—É—é –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –≤ WelcomeScreen');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É –æ–±–µ–∏—Ö —Å–µ—Ä–∏–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        console.log('üì• –ó–∞–ø—É—Å–∫–∞—é —Ñ–æ–Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É 3530 –∏ 3730 —Å–µ—Ä–∏–π');
        setLoadingProgress(10);
        
        // –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ 3530 —Å–µ—Ä–∏–∏
        preloadModel(firstModelUrl).then(() => {
          console.log('‚úÖ 3530 —Å–µ—Ä–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ');
        }).catch(error => {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ 3530:', error);
        });
        
        // –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ 3730 —Å–µ—Ä–∏–∏
        preloadModel(secondModelUrl).then(() => {
          console.log('‚úÖ 3730 —Å–µ—Ä–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ');
        }).catch(error => {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ 3730:', error);
        });
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞ 10 —Å–µ–∫—É–Ω–¥
        setTimeout(() => setLoadingProgress(20), 2000);
        setTimeout(() => setLoadingProgress(40), 4000);
        setTimeout(() => setLoadingProgress(60), 6000);
        setTimeout(() => setLoadingProgress(80), 8000);
        setTimeout(() => setLoadingProgress(95), 9000);
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –Ω–æ –Ω–µ –º–µ–Ω–µ–µ 10 —Å–µ–∫—É–Ω–¥
        const checkModelsAndComplete = () => {
          const firstReady = isModelReady(firstModelUrl);
          const secondReady = isModelReady(secondModelUrl);
          
          if (firstReady && secondReady) {
            setLoadingProgress(100);
            setIsWelcomeLoadingComplete(true);
            console.log('üéâ WelcomeScreen –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≥–æ—Ç–æ–≤—ã!');
            return true;
          }
          return false;
        };
        
        // –ú–∏–Ω–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞–∑–∞
        setTimeout(() => {
          if (!checkModelsAndComplete()) {
            // –ï—Å–ª–∏ –º–æ–¥–µ–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
            const checkInterval = setInterval(() => {
              if (checkModelsAndComplete()) {
                clearInterval(checkInterval);
              }
            }, 500);
          }
        }, 10000);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –≤ WelcomeScreen:', error);
        // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        setIsWelcomeLoadingComplete(true);
      }
    };

    loadWelcomeModels();
  }, [heroData, preloadModel, preloadModelPartially, isModelReady]);

  return {
    isWelcomeLoadingComplete,
    loadingProgress
  };
};
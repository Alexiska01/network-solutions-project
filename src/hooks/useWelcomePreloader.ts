import { useEffect, useState } from 'react';

interface WelcomePreloaderState {
  isWelcomeLoadingComplete: boolean;
  loadingProgress: number;
}

export const useWelcomePreloader = (heroData: any[]): WelcomePreloaderState => {
  const [isWelcomeLoadingComplete, setIsWelcomeLoadingComplete] = useState(false);
  const [loadingProgress, setLoadingProgress] = useState(0);
  const [criticalModelsLoaded, setCriticalModelsLoaded] = useState(false);

  useEffect(() => {
    const loadWelcome = async () => {
      console.log('üöÄ WelcomeScreen: –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π');
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ URL –º–æ–¥–µ–ª–µ–π
      const allUrls = heroData.map(item => item.modelUrl);
      console.log('üìé WelcomeScreen: –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–µ–π:', allUrls);
      
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π (3530 –∏ 3730)
      const criticalUrls = heroData.slice(0, 2).map(item => item.modelUrl);
      console.log('‚ö° WelcomeScreen: –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:', criticalUrls);
      
      // –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      const loadingPromises = allUrls.map(async (url, index) => {
        try {
          console.log(`üîÑ WelcomeScreen: –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ ${index + 1}/4 - ${url}`);
          const response = await fetch(url, { method: 'HEAD' });
          if (response.ok) {
            console.log(`‚úÖ WelcomeScreen: –ú–æ–¥–µ–ª—å ${index + 1} –∑–∞–≥—Ä—É–∂–µ–Ω–∞ - ${url}`);
          } else {
            console.warn(`‚ö†Ô∏è WelcomeScreen: –ú–æ–¥–µ–ª—å ${index + 1} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - ${url}`);
          }
        } catch (error) {
          console.error(`‚ùå WelcomeScreen: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ ${index + 1} - ${url}:`, error);
        }
      });
      
      // –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤—Ä–µ–º–µ–Ω–∏
      setLoadingProgress(10);
      setTimeout(() => setLoadingProgress(25), 1000);
      setTimeout(() => setLoadingProgress(50), 3000);
      setTimeout(() => setLoadingProgress(70), 6000);
      setTimeout(() => setLoadingProgress(85), 9000);
      setTimeout(() => setLoadingProgress(95), 12000);
      setTimeout(() => setLoadingProgress(100), 14000);
      
      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
      Promise.all(loadingPromises.slice(0, 2)).then(() => {
        console.log('‚úÖ WelcomeScreen: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –º–æ–¥–µ–ª–∏ (3530, 3730) –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
        setCriticalModelsLoaded(true);
      });
      
      // –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª–∏—Ç—Å—è 15 —Å–µ–∫—É–Ω–¥, –Ω–æ –ø–µ—Ä–µ—Ö–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π
      setTimeout(() => {
        if (criticalModelsLoaded) {
          setIsWelcomeLoadingComplete(true);
          console.log('‚úÖ WelcomeScreen –≥–æ—Ç–æ–≤! –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ 15 —Å–µ–∫—É–Ω–¥');
        }
      }, 15000); // –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥
    };

    loadWelcome();
  }, [heroData, criticalModelsLoaded]);

  return {
    isWelcomeLoadingComplete,
    loadingProgress
  };
};
// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π

import { ModelCache } from './modelCache';

export class CacheDebug {
  /**
   * –í—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫—ç—à–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
   */
  static async logCacheStatus(): Promise<void> {
    console.group('üì¶ CacheDebug: –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—ç—à–µ');
    
    try {
      const info = await ModelCache.getCacheInfo();
      
      console.log('üîç –°—Ç–∞—Ç—É—Å –∫—ç—à–∞:', info.status);
      console.log('‚úÖ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', info.isValid ? '–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω' : '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω');
      console.log('üìÖ –ò—Å—Ç–µ—á–µ–Ω–∏–µ:', info.expiryDate || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      
      if (info.cachedModels.length > 0) {
        console.log('üìã –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:');
        info.cachedModels.forEach((model, index) => {
          console.log(`  ${index + 1}. ${model}`);
        });
      } else {
        console.log('üìã –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏: –ù–µ—Ç');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
      const expiryTime = localStorage.getItem('idata-models-cache-expiry');
      const status = localStorage.getItem('idata-models-cache-status');
      
      console.log('üíæ localStorage:');
      console.log(`  - –°—Ç–∞—Ç—É—Å: ${status || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      console.log(`  - –ò—Å—Ç–µ—á–µ–Ω–∏–µ: ${expiryTime ? new Date(parseInt(expiryTime)).toLocaleString() : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Cache API
      if ('caches' in window) {
        try {
          const cache = await caches.open('idata-models-cache');
          const keys = await cache.keys();
          console.log(`üîß Cache API: ${keys.length} –∑–∞–ø–∏—Å–µ–π`);
        } catch (error) {
          console.log('üîß Cache API: –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞', error);
        }
      } else {
        console.log('üîß Cache API: –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      }
      
    } catch (error) {
      console.error('‚ùå CacheDebug: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
    }
    
    console.groupEnd();
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤–µ—Å—å –∫—ç—à –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
   */
  static async clearCacheWithLog(): Promise<void> {
    console.log('üßπ CacheDebug: –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞...');
    
    try {
      await ModelCache.clearCache();
      console.log('‚úÖ CacheDebug: –ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–µ–Ω–æ
      setTimeout(() => {
        this.logCacheStatus();
      }, 100);
      
    } catch (error) {
      console.error('‚ùå CacheDebug: –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞:', error);
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∫—ç—à–∏—Ä—É–µ—Ç –≤—Å–µ –º–æ–¥–µ–ª–∏ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
   */
  static async forceCacheModels(): Promise<void> {
    console.log('üöÄ CacheDebug: –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ...');
    
    try {
      await ModelCache.cacheModels((progress) => {
        console.log(`üìä CacheDebug: –ü—Ä–æ–≥—Ä–µ—Å—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è: ${Math.round(progress)}%`);
      });
      
      console.log('‚úÖ CacheDebug: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      setTimeout(() => {
        this.logCacheStatus();
      }, 100);
      
    } catch (error) {
      console.error('‚ùå CacheDebug: –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –æ—á–∏—Å—Ç–∫–∞ -> –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ -> –ø—Ä–æ–≤–µ—Ä–∫–∞
   */
  static async testFullCycle(): Promise<void> {
    console.group('üîÑ CacheDebug: –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è');
    
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...');
    await this.logCacheStatus();
    
    console.log('2Ô∏è‚É£ –û—á–∏—â–∞–µ–º –∫—ç—à...');
    await this.clearCacheWithLog();
    
    console.log('3Ô∏è‚É£ –ñ–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É...');
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    console.log('4Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ...');
    await this.forceCacheModels();
    
    console.log('5Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
    await new Promise(resolve => setTimeout(resolve, 500));
    await this.logCacheStatus();
    
    console.groupEnd();
    console.log('‚úÖ CacheDebug: –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∑–∞–≤–µ—Ä—à—ë–Ω');
  }

  /**
   * –î–æ–±–∞–≤–ª—è–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ window (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
   */
  static addGlobalDebugFunctions(): void {
    if (import.meta.env.DEV) {
      (window as any).cacheDebug = {
        status: () => this.logCacheStatus(),
        clear: () => this.clearCacheWithLog(),
        cache: () => this.forceCacheModels(),
        test: () => this.testFullCycle(),
        help: () => {
          console.log('üîß CacheDebug: –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
          console.log('  cacheDebug.status() - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫—ç—à–∞');
          console.log('  cacheDebug.clear()  - –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à');
          console.log('  cacheDebug.cache()  - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ');
          console.log('  cacheDebug.test()   - –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ü–∏–∫–ª–∞');
        }
      };
      
      console.log('üîß CacheDebug: –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ window.cacheDebug');
      console.log('   –í–≤–µ–¥–∏—Ç–µ cacheDebug.help() –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏');
    }
  }
}
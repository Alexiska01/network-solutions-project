import Icon from "@/components/ui/icon";
import { useEffect, useState, useRef } from "react";
import { modelPreloader } from '@/utils/modelPreloader';
import { modelCacheManager } from '@/utils/modelCacheManager';
import "./Hero3530.css";

// –§–∏—á–∏ –¥–ª—è –ø—Ä–∞–≤–æ–≥–æ –±–ª–æ–∫–∞ IDS3530
const featuresRight = [
  {
    icon: "Layers3",
    label: "–°—Ç–µ–∫ –¥–æ 8 —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (10G SFP+)",
  },
  {
    icon: "Zap",
    label: "PoE/PoE+ –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
  },
  {
    icon: "Repeat",
    label: "–í—ã—Å–æ–∫–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: STP, RSTP, MSTP",
  },
];

// –î–∞–Ω–Ω—ã–µ 3D-–º–æ–¥–µ–ª–∏ 3530
const model3530Data = {
  modelUrl: '/models/3530all.glb',
  series: '3530',
  gradient: 'from-[#32398e] via-[#005baa] to-[#0079b6]',
  glowColor: '[#005baa]',
  accentColor: '#53c2a4'
};



const Hero3530 = () => {
  const [isModelLoaded, setIsModelLoaded] = useState(false);
  const [isModelVisible, setIsModelVisible] = useState(false);
  const [showLoader, setShowLoader] = useState(false);
  const [isInView, setIsInView] = useState(false);
  const [isMobile, setIsMobile] = useState(false);
  const [is120fps, setIs120fps] = useState(false);
  const modelViewerRef = useRef<any>(null);
  const sectionRef = useRef<HTMLElement>(null);
  const hasCheckedCacheRef = useRef(false);

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ FPS
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };
    
    checkMobile();
    window.addEventListener('resize', checkMobile);
    return () => window.removeEventListener('resize', checkMobile);
  }, []);

  // –î–µ—Ç–µ–∫—Ü–∏—è –≤—ã—Å–æ–∫–æ–π —á–∞—Å—Ç–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  useEffect(() => {
    let frameCount = 0;
    let startTime = 0;
    let animationId: number;

    const measureFPS = () => {
      if (frameCount === 0) {
        startTime = performance.now();
      }
      frameCount++;
      
      if (frameCount === 60) {
        const endTime = performance.now();
        const fps = Math.round(60000 / (endTime - startTime));
        
        if (fps >= 115) {
          setIs120fps(true);
          console.log(`üöÄ Hero3530: –û–±–Ω–∞—Ä—É–∂–µ–Ω ${fps} FPS –¥–∏—Å–ø–ª–µ–π - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —Ä–µ–∂–∏–º 120 FPS!`);
        } else {
          setIs120fps(false);
          console.log(`üì∫ Hero3530: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π ${fps} FPS –¥–∏—Å–ø–ª–µ–π`);
        }
        return;
      }
      
      animationId = requestAnimationFrame(measureFPS);
    };

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—ã—Å–æ–∫–æ–π —á–∞—Å—Ç–æ—Ç—ã —á–µ—Ä–µ–∑ media query
    const highRefreshSupported = window.matchMedia('(min-refresh-rate: 120hz)').matches;
    if (highRefreshSupported) {
      setIs120fps(true);
      console.log('üöÄ Hero3530: 120Hz+ –¥–∏—Å–ø–ª–µ–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —á–µ—Ä–µ–∑ CSS media query');
    } else {
      animationId = requestAnimationFrame(measureFPS);
    }

    return () => {
      if (animationId) {
        cancelAnimationFrame(animationId);
      }
    };
  }, []);

  // Intersection Observer –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsInView(true);
          console.log('üëÅÔ∏è Hero3530: –°–µ–∫—Ü–∏—è –ø–æ–ø–∞–ª–∞ –≤ –∑–æ–Ω—É –≤–∏–¥–∏–º–æ—Å—Ç–∏ - –∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π');
        }
      },
      { 
        threshold: isMobile ? 0.2 : 0.3,
        rootMargin: isMobile ? '-20px' : '-50px'
      }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, [isMobile]);

  useEffect(() => {
    const checkModelCacheStatus = async () => {
      if (hasCheckedCacheRef.current) return;
      hasCheckedCacheRef.current = true;

      console.log('üîç Hero3530: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏ 3530');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫—ç—à–∞
      const isPreloaded = modelPreloader.isLoaded(model3530Data.modelUrl);
      const isCached = await modelCacheManager.hasModel(model3530Data.modelUrl);
      
      console.log(`üìä Hero3530: –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–∏ 3530 - preloader: ${isPreloaded}, cache: ${isCached}`);
      
      if (isPreloaded || isCached) {
        console.log('‚ö° Hero3530: –ú–æ–¥–µ–ª—å 3530 –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫—ç—à–µ - –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞');
        setIsModelLoaded(true);
        setIsModelVisible(true);
        setShowLoader(false);
      } else {
        console.log('‚è≥ Hero3530: –ú–æ–¥–µ–ª—å 3530 –Ω–µ –≤ –∫—ç—à–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º');
        setShowLoader(true);
        
        // –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ modelCacheManager
        try {
          const response = await modelCacheManager.loadModel(model3530Data.modelUrl);
          if (response) {
            console.log('‚úÖ Hero3530: –ú–æ–¥–µ–ª—å 3530 –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —á–µ—Ä–µ–∑ modelCacheManager');
            setIsModelLoaded(true);
            setTimeout(() => {
              setIsModelVisible(true);
              setShowLoader(false);
            }, 300);
          }
        } catch (error) {
          console.warn('‚ö†Ô∏è Hero3530: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ modelCacheManager', error);
          setShowLoader(false);
        }
      }
    };

    checkModelCacheStatus();
  }, []);

  useEffect(() => {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ä–∞—â–µ–Ω–∏—è –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–∏
    if (modelViewerRef.current && isModelVisible) {
      const modelViewer = modelViewerRef.current;
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã - –ø—Ä–∏–±–ª–∏–∂–∞–µ–º –¥–ª—è –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –º–æ–¥–µ–ª–∏
      modelViewer.cameraOrbit = "0deg 75deg 85%"; // –£–º–µ–Ω—å—à–∏–ª–∏ —Å 110% –¥–æ 85% –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
      modelViewer.autoRotate = true;
      modelViewer.autoRotateDelay = 1000;
      modelViewer.rotationPerSecond = "25deg";
      
      // –ü–æ–ª–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ touch –∏ mouse –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
      modelViewer.disableZoom = true;
      modelViewer.disablePan = true;
      modelViewer.disableTap = true;
      modelViewer.interactionPolicy = 'none';
      modelViewer.cameraControls = false;
      
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–æ–Ω—ã –∏ –≥—Ä–∞–Ω–∏—Ü—ã
      modelViewer.style.background = 'transparent';
      modelViewer.style.border = 'none';
      modelViewer.style.outline = 'none';
      modelViewer.style.boxShadow = 'none';
      modelViewer.style.pointerEvents = 'none'; // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Å–≤–µ—â–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ñ–æ–Ω–æ–º
      modelViewer.setAttribute('environment-image', 'neutral');
      modelViewer.setAttribute('shadow-intensity', '0');
      modelViewer.setAttribute('exposure', '1.0');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö touch —Å–æ–±—ã—Ç–∏–π
      modelViewer.addEventListener('touchstart', (e: Event) => e.preventDefault(), { passive: false });
      modelViewer.addEventListener('touchmove', (e: Event) => e.preventDefault(), { passive: false });
      modelViewer.addEventListener('touchend', (e: Event) => e.preventDefault(), { passive: false });
      modelViewer.addEventListener('gesturestart', (e: Event) => e.preventDefault(), { passive: false });
      modelViewer.addEventListener('gesturechange', (e: Event) => e.preventDefault(), { passive: false });
      modelViewer.addEventListener('gestureend', (e: Event) => e.preventDefault(), { passive: false });
      
      console.log(`üé¨ Hero3530: –ú–æ–¥–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ - touch –æ—Ç–∫–ª—é—á–µ–Ω, –∫–∞–º–µ—Ä–∞ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∞ (85%)`);
    }
  }, [isModelVisible]);



  return (
    <section 
      ref={sectionRef}
      className={`bg-gradient-hero text-white py-4 sm:py-6 md:py-8 lg:py-12 xl:py-16 relative overflow-hidden min-h-[420px] md:min-h-[480px] hero-gpu ${
        is120fps ? 'hero-120fps' : ''
      } ${
        isInView ? 'hero-visible' : ''
      }`}
    >
      <div className="max-w-7xl mx-auto px-3 sm:px-4 md:px-6 lg:px-8 relative z-10 h-full flex items-center">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 md:gap-8 lg:gap-12 items-start lg:items-center w-full">
          
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div
            className="lg:pr-4 xl:pr-8 text-content-gpu"
          >
            <p className="text-xs sm:text-sm text-blue-200 font-medium mb-1 sm:mb-2 md:mb-3 uppercase tracking-wide text-gpu hero-subtitle">
              –°–µ—Ä–∏—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä–æ–≤
            </p>
            
            <h1 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-2 sm:mb-3 md:mb-4 leading-tight title-gpu hero-title">
              IDS3530
            </h1>
            
            <div className="mb-4 sm:mb-5 md:mb-6 lg:mb-8 space-y-2 sm:space-y-3 features-list-gpu hero-features">
              <div className="flex items-center gap-2 sm:gap-3 text-blue-100">
                <Icon
                  name="Server"
                  size={18}
                  strokeWidth={1.8}
                  className="text-blue-300 flex-shrink-0 icon-gpu"
                />
                <span className="text-xs sm:text-sm md:text-base">
                  –î–æ 760 –í—Ç PoE+, 10G uplink, –º–æ–¥—É–ª—å–Ω—ã–µ –ë–ü
                </span>
              </div>
              <div className="flex items-center gap-2 sm:gap-3 text-blue-100">
                <Icon
                  name="Layers3"
                  size={18}
                  strokeWidth={1.8}
                  className="text-blue-300 flex-shrink-0 icon-gpu"
                />
                <span className="text-xs sm:text-sm md:text-base">
                  –°—Ç–µ–∫ –¥–æ 8 —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –∫–æ–ª—å—Ü–µ–≤—ã–µ —Ç–æ–ø–æ–ª–æ–≥–∏–∏
                </span>
              </div>
              <div className="flex items-center gap-2 sm:gap-3 text-blue-100">
                <Icon
                  name="Settings"
                  size={18}
                  strokeWidth={1.8}
                  className="text-blue-300 flex-shrink-0 icon-gpu"
                />
                <span className="text-xs sm:text-sm md:text-base">
                  QoS, SNMP, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (ZTP), —É–¥–∞–ª—ë–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                </span>
              </div>
            </div>
            
            {/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ */}
            <div className="button-container-gpu hero-button">
              <button
                className="bg-white text-[#0065B3] px-4 sm:px-5 md:px-6 py-2.5 sm:py-3 rounded-lg text-sm sm:text-base font-medium hover:bg-gradient-brand hover:text-white hover:border hover:border-white transition-all duration-300 min-h-[44px] hover:scale-105 hover:shadow-lg transform-gpu cta-button-gpu"
                onClick={() =>
                  window.open(
                    "https://drive.google.com/file/d/1-4xHlvPUr7kUBCQBzgh7Lz2FGC1COfwe/view?usp=drive_link",
                    "_blank",
                  )
                }
              >
                –°–∫–∞—á–∞—Ç—å PDF
              </button>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - 3D –º–æ–¥–µ–ª—å –∏ —Ñ–∏—á–∏ */}
          <div className="relative mt-4 sm:mt-6 lg:mt-0 model-section-gpu hero-model-section">
            <div className="flex flex-col space-y-4 sm:space-y-5 md:space-y-6">
              
              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å 3D-–º–æ–¥–µ–ª—å—é - –ü–û–õ–ù–û–°–¢–¨–Æ –ü–†–û–ó–†–ê–ß–ù–´–ô */}
              <div className="relative w-full max-w-[320px] sm:max-w-[360px] md:max-w-[400px] lg:max-w-[420px] h-[200px] sm:h-[240px] md:h-[280px] lg:h-[320px] mx-auto lg:mx-0 model-container-gpu hero-model-container">
                {/* 3D –º–æ–¥–µ–ª—å - –ë–ï–ó –§–û–ù–ê, –ì–†–ê–ù–ò–¶ –ò –ö–û–ù–¢–ï–ô–ù–ï–†–û–í */}
                {isModelLoaded && (
                  <div className={`relative z-10 w-full h-full hero-model ${isModelVisible ? 'model-loaded' : ''}`}>
                    <model-viewer
                      ref={modelViewerRef}
                      src={model3530Data.modelUrl}
                      alt="3D –º–æ–¥–µ–ª—å –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä–∞ IDS3530"
                      auto-rotate
                      auto-rotate-delay="1000"
                      rotation-per-second="25deg"
                      camera-orbit="0deg 75deg 85%"
                      min-camera-orbit="auto auto 85%"
                      max-camera-orbit="auto auto 85%"
                      interaction-policy="none"
                      disable-zoom
                      disable-pan
                      disable-tap
                      environment-image="neutral"
                      shadow-intensity="0"
                      exposure="1.0"
                      style={{
                        width: '100%',
                        height: '100%',
                        background: 'transparent',
                        border: 'none',
                        outline: 'none',
                        boxShadow: 'none',
                        pointerEvents: 'none',
                        touchAction: 'none',
                      }}
                      onLoad={() => {
                        console.log(`‚úÖ Hero3530: 3D-–º–æ–¥–µ–ª—å ${model3530Data.series} –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è`);
                        setIsModelVisible(true);
                        setShowLoader(false);
                        
                        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å preloader
                        if (!modelPreloader.isLoaded(model3530Data.modelUrl)) {
                          console.log(`üîÑ Hero3530: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å ${model3530Data.series} —Å preloader`);
                          modelPreloader.markAsLoaded && modelPreloader.markAsLoaded(model3530Data.modelUrl);
                        }
                      }}
                      onError={(e) => {
                        console.error(`‚ùå Hero3530: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ ${model3530Data.series}`, e);
                        setShowLoader(false);
                      }}
                    />
                  </div>
                )}
                
                {/* –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ª–æ–∞–¥–µ—Ä - –¢–û–õ–¨–ö–û –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ */}
                {showLoader && !isModelVisible && (
                  <div className="absolute inset-0 flex items-center justify-center z-20">
                    <div className="flex flex-col items-center gap-3">
                      <div className="w-6 h-6 border-2 border-white/20 border-t-white/60 rounded-full animate-spin" />
                      <span className="text-white/60 text-sm font-medium">
                        –ó–∞–≥—Ä—É–∑–∫–∞...
                      </span>
                    </div>
                  </div>
                )}
              </div>

              {/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏—á–∏-–∫–∞—Ä—Ç–æ—á–∫–∏ - –ú–ò–ù–ò–ú–ê–õ–ò–°–¢–ò–ß–ù–´–ï –ë–ï–ó –ì–†–ê–ù–ò–¶ */}
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-1 gap-3 sm:gap-4">
                {featuresRight.map(({ icon, label }, i) => (
                  <div
                    key={label}
                    className={`flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-300 transform-gpu feature-card-gpu hero-feature-card hero-feature-${i + 1}`}
                    style={{
                      backgroundColor: "rgba(255,255,255,0.06)",
                      backdropFilter: "blur(8px)",
                    }}
                  >
                    <div className="flex items-center justify-center w-6 h-6 rounded-md bg-white/10 flex-shrink-0">
                      <Icon
                        name={icon as any}
                        size={16}
                        strokeWidth={1.8}
                        className="text-white/90 icon-gpu"
                      />
                    </div>
                    <span className="text-white/90 font-medium text-sm sm:text-base leading-snug">
                      {label}
                    </span>
                  </div>
                ))}
              </div>

              {/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ - –ë–ï–ó –ì–†–ê–ù–ò–¶ */}
              <div
                className="flex items-start gap-3 px-4 py-3 rounded-lg transition-all duration-300 transform-gpu description-card-gpu hero-description"
                style={{
                  backgroundColor: "rgba(255,255,255,0.04)",
                  backdropFilter: "blur(6px)",
                }}
              >
                <div className="flex items-center justify-center w-6 h-6 rounded-md bg-white/8 flex-shrink-0 mt-0.5">
                  <Icon
                    name="ServerCog"
                    size={16}
                    strokeWidth={1.8}
                    className="text-white/80 icon-gpu"
                  />
                </div>
                <span className="text-white/80 font-medium text-xs sm:text-sm leading-relaxed">
                  –õ—ë–≥–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏,
                  –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–ª—å—Ü–µ–≤—ã—Ö —Ç–æ–ø–æ–ª–æ–≥–∏–π, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ —É–¥–∞–ª—ë–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero3530;